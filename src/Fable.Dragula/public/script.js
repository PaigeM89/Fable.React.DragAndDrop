/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./.fable/fable-library.2.13.0/Reflection.js":
/*!***************************************************!*\
  !*** ./.fable/fable-library.2.13.0/Reflection.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CaseInfo\": () => (/* binding */ CaseInfo),\n/* harmony export */   \"TypeInfo\": () => (/* binding */ TypeInfo),\n/* harmony export */   \"getGenerics\": () => (/* binding */ getGenerics),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"class_type\": () => (/* binding */ class_type),\n/* harmony export */   \"record_type\": () => (/* binding */ record_type),\n/* harmony export */   \"anonRecord_type\": () => (/* binding */ anonRecord_type),\n/* harmony export */   \"union_type\": () => (/* binding */ union_type),\n/* harmony export */   \"tuple_type\": () => (/* binding */ tuple_type),\n/* harmony export */   \"delegate_type\": () => (/* binding */ delegate_type),\n/* harmony export */   \"lambda_type\": () => (/* binding */ lambda_type),\n/* harmony export */   \"option_type\": () => (/* binding */ option_type),\n/* harmony export */   \"list_type\": () => (/* binding */ list_type),\n/* harmony export */   \"array_type\": () => (/* binding */ array_type),\n/* harmony export */   \"enum_type\": () => (/* binding */ enum_type),\n/* harmony export */   \"obj_type\": () => (/* binding */ obj_type),\n/* harmony export */   \"unit_type\": () => (/* binding */ unit_type),\n/* harmony export */   \"char_type\": () => (/* binding */ char_type),\n/* harmony export */   \"string_type\": () => (/* binding */ string_type),\n/* harmony export */   \"bool_type\": () => (/* binding */ bool_type),\n/* harmony export */   \"int8_type\": () => (/* binding */ int8_type),\n/* harmony export */   \"uint8_type\": () => (/* binding */ uint8_type),\n/* harmony export */   \"int16_type\": () => (/* binding */ int16_type),\n/* harmony export */   \"uint16_type\": () => (/* binding */ uint16_type),\n/* harmony export */   \"int32_type\": () => (/* binding */ int32_type),\n/* harmony export */   \"uint32_type\": () => (/* binding */ uint32_type),\n/* harmony export */   \"float32_type\": () => (/* binding */ float32_type),\n/* harmony export */   \"float64_type\": () => (/* binding */ float64_type),\n/* harmony export */   \"decimal_type\": () => (/* binding */ decimal_type),\n/* harmony export */   \"name\": () => (/* binding */ name),\n/* harmony export */   \"fullName\": () => (/* binding */ fullName),\n/* harmony export */   \"namespace\": () => (/* binding */ namespace),\n/* harmony export */   \"isArray\": () => (/* binding */ isArray),\n/* harmony export */   \"getElementType\": () => (/* binding */ getElementType),\n/* harmony export */   \"isGenericType\": () => (/* binding */ isGenericType),\n/* harmony export */   \"isEnum\": () => (/* binding */ isEnum),\n/* harmony export */   \"getGenericTypeDefinition\": () => (/* binding */ getGenericTypeDefinition),\n/* harmony export */   \"getEnumUnderlyingType\": () => (/* binding */ getEnumUnderlyingType),\n/* harmony export */   \"getEnumValues\": () => (/* binding */ getEnumValues),\n/* harmony export */   \"getEnumNames\": () => (/* binding */ getEnumNames),\n/* harmony export */   \"parseEnum\": () => (/* binding */ parseEnum),\n/* harmony export */   \"tryParseEnum\": () => (/* binding */ tryParseEnum),\n/* harmony export */   \"getEnumName\": () => (/* binding */ getEnumName),\n/* harmony export */   \"isEnumDefined\": () => (/* binding */ isEnumDefined),\n/* harmony export */   \"getUnionCases\": () => (/* binding */ getUnionCases),\n/* harmony export */   \"getRecordElements\": () => (/* binding */ getRecordElements),\n/* harmony export */   \"getTupleElements\": () => (/* binding */ getTupleElements),\n/* harmony export */   \"getFunctionElements\": () => (/* binding */ getFunctionElements),\n/* harmony export */   \"isUnion\": () => (/* binding */ isUnion),\n/* harmony export */   \"isRecord\": () => (/* binding */ isRecord),\n/* harmony export */   \"isTuple\": () => (/* binding */ isTuple),\n/* harmony export */   \"isFunction\": () => (/* binding */ isFunction),\n/* harmony export */   \"getUnionFields\": () => (/* binding */ getUnionFields),\n/* harmony export */   \"getUnionCaseFields\": () => (/* binding */ getUnionCaseFields),\n/* harmony export */   \"getRecordFields\": () => (/* binding */ getRecordFields),\n/* harmony export */   \"getRecordField\": () => (/* binding */ getRecordField),\n/* harmony export */   \"getTupleFields\": () => (/* binding */ getTupleFields),\n/* harmony export */   \"getTupleField\": () => (/* binding */ getTupleField),\n/* harmony export */   \"makeUnion\": () => (/* binding */ makeUnion),\n/* harmony export */   \"makeRecord\": () => (/* binding */ makeRecord),\n/* harmony export */   \"makeTuple\": () => (/* binding */ makeTuple),\n/* harmony export */   \"makeGenericType\": () => (/* binding */ makeGenericType),\n/* harmony export */   \"createInstance\": () => (/* binding */ createInstance),\n/* harmony export */   \"getValue\": () => (/* binding */ getValue),\n/* harmony export */   \"getCaseTag\": () => (/* binding */ getCaseTag),\n/* harmony export */   \"getCaseName\": () => (/* binding */ getCaseName),\n/* harmony export */   \"getCaseFields\": () => (/* binding */ getCaseFields)\n/* harmony export */ });\n/* harmony import */ var _Types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Types */ \"./.fable/fable-library.2.13.0/Types.js\");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Util */ \"./.fable/fable-library.2.13.0/Util.js\");\n\n\nclass CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nclass TypeInfo {\n    constructor(fullname, generics, construct, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nfunction getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nfunction equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && (0,_Util__WEBPACK_IMPORTED_MODULE_1__.equalArraysWith)(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && (0,_Util__WEBPACK_IMPORTED_MODULE_1__.equalArraysWith)(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nfunction compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return (0,_Util__WEBPACK_IMPORTED_MODULE_1__.compareArraysWith)(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nfunction class_type(fullname, generics, construct) {\n    return new TypeInfo(fullname, generics, construct);\n}\nfunction record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, fields);\n}\nfunction anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, () => fields);\n}\nfunction union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, () => cases().map((x, i) => typeof x === \"string\"\n        ? new CaseInfo(t, i, x)\n        : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nfunction tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nfunction delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nfunction lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nfunction option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nfunction list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nfunction array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nfunction enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, enumCases);\n}\nconst obj_type = new TypeInfo(\"System.Object\");\nconst unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nconst char_type = new TypeInfo(\"System.Char\");\nconst string_type = new TypeInfo(\"System.String\");\nconst bool_type = new TypeInfo(\"System.Boolean\");\nconst int8_type = new TypeInfo(\"System.SByte\");\nconst uint8_type = new TypeInfo(\"System.Byte\");\nconst int16_type = new TypeInfo(\"System.Int16\");\nconst uint16_type = new TypeInfo(\"System.UInt16\");\nconst int32_type = new TypeInfo(\"System.Int32\");\nconst uint32_type = new TypeInfo(\"System.UInt32\");\nconst float32_type = new TypeInfo(\"System.Single\");\nconst float64_type = new TypeInfo(\"System.Double\");\nconst decimal_type = new TypeInfo(\"System.Decimal\");\nfunction name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nfunction fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nfunction namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nfunction isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nfunction getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nfunction isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nfunction isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nfunction getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nfunction getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nfunction getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nfunction tryParseEnum(t, str) {\n    try {\n        const v = parseEnum(t, str);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, NaN];\n}\nfunction getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nfunction isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nfunction getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nfunction getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nfunction getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nfunction getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nfunction isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof _Types__WEBPACK_IMPORTED_MODULE_0__.Union;\n}\nfunction isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof _Types__WEBPACK_IMPORTED_MODULE_0__.Record;\n}\nfunction isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nfunction isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nfunction getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nfunction getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\nfunction getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nfunction getRecordField(v, field) {\n    return v[field[0]];\n}\nfunction getTupleFields(v) {\n    return v;\n}\nfunction getTupleField(v, i) {\n    return v[i];\n}\nfunction makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, uci.name, ...values)\n        : {};\n}\nfunction makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : (0,_Types__WEBPACK_IMPORTED_MODULE_0__.anonRecord)(fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {}));\n}\nfunction makeTuple(values, _t) {\n    return values;\n}\nfunction makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.fields, t.cases);\n}\nfunction createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nfunction getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof _Types__WEBPACK_IMPORTED_MODULE_0__.Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nfunction getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nfunction getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nfunction getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n//# sourceMappingURL=Reflection.js.map\n\n//# sourceURL=webpack://Fable.Dragula/./.fable/fable-library.2.13.0/Reflection.js?");

/***/ }),

/***/ "./.fable/fable-library.2.13.0/Types.js":
/*!**********************************************!*\
  !*** ./.fable/fable-library.2.13.0/Types.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"declare\": () => (/* binding */ declare),\n/* harmony export */   \"SystemObject\": () => (/* binding */ SystemObject),\n/* harmony export */   \"List\": () => (/* binding */ List),\n/* harmony export */   \"Union\": () => (/* binding */ Union),\n/* harmony export */   \"Record\": () => (/* binding */ Record),\n/* harmony export */   \"anonRecord\": () => (/* binding */ anonRecord),\n/* harmony export */   \"FSharpRef\": () => (/* binding */ FSharpRef),\n/* harmony export */   \"Exception\": () => (/* binding */ Exception),\n/* harmony export */   \"isException\": () => (/* binding */ isException),\n/* harmony export */   \"FSharpException\": () => (/* binding */ FSharpException),\n/* harmony export */   \"MatchFailureException\": () => (/* binding */ MatchFailureException),\n/* harmony export */   \"Attribute\": () => (/* binding */ Attribute)\n/* harmony export */ });\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util */ \"./.fable/fable-library.2.13.0/Util.js\");\n// tslint:disable: space-before-function-paren\n\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nfunction declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nclass SystemObject {\n    toString() {\n        return \"{\" + Object.entries(this).map(([k, v]) => k + \" = \" + String(v)).join(\";\\n \") + \"}\";\n    }\n    GetHashCode(x) {\n        return (0,_Util__WEBPACK_IMPORTED_MODULE_0__.identityHash)(x !== null && x !== void 0 ? x : this);\n    }\n    Equals(x, y) {\n        return x === (y !== null && y !== void 0 ? y : this);\n    }\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = (0,_Util__WEBPACK_IMPORTED_MODULE_0__.compare)(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nclass List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        return \"[\" + Array.from(this).join(\"; \") + \"]\";\n    }\n    toJSON() {\n        return Array.from(this);\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    GetHashCode() {\n        const hashes = Array.from(this).map(_Util__WEBPACK_IMPORTED_MODULE_0__.structuralHash);\n        return (0,_Util__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)(hashes);\n    }\n    Equals(other) {\n        return compareList(this, other) === 0;\n    }\n    CompareTo(other) {\n        return compareList(this, other);\n    }\n}\nclass Union extends SystemObject {\n    constructor(tag, name, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.name = name;\n        this.fields = fields;\n    }\n    toString() {\n        const len = this.fields.length;\n        if (len === 0) {\n            return this.name;\n        }\n        else if (len === 1) {\n            return this.name + \" \" + String(this.fields[0]);\n        }\n        else {\n            return this.name + \" (\" + this.fields.map((x) => String(x)).join(\",\") + \")\";\n        }\n    }\n    toJSON() {\n        return this.fields.length === 0\n            ? this.name\n            : [this.name].concat(this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => (0,_Util__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(x));\n        hashes.splice(0, 0, (0,_Util__WEBPACK_IMPORTED_MODULE_0__.numberHash)(this.tag));\n        return (0,_Util__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)(hashes);\n    }\n    Equals(other) {\n        return this === other\n            || (sameType(this, other)\n                && this.tag === other.tag\n                && (0,_Util__WEBPACK_IMPORTED_MODULE_0__.equalArrays)(this.fields, other.fields));\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameType(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return (0,_Util__WEBPACK_IMPORTED_MODULE_0__.compareArrays)(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!(0,_Util__WEBPACK_IMPORTED_MODULE_0__.equals)(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = (0,_Util__WEBPACK_IMPORTED_MODULE_0__.compare)(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nclass Record extends SystemObject {\n    toString() {\n        return \"{\" + Object.entries(this).map(([k, v]) => k + \" = \" + String(v)).join(\";\\n \") + \"}\";\n    }\n    toJSON() {\n        return recordToJson(this);\n    }\n    GetHashCode() {\n        const hashes = Object.values(this).map((v) => (0,_Util__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(v));\n        return (0,_Util__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)(hashes);\n    }\n    Equals(other) {\n        return recordEquals(this, other);\n    }\n    CompareTo(other) {\n        return recordCompare(this, other);\n    }\n}\nfunction anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nclass FSharpRef extends Record {\n    constructor(contents) {\n        super();\n        this.contents = contents;\n    }\n}\nconst Exception = declare(function Exception(message) {\n    this.stack = Error().stack;\n    this.message = message;\n}, SystemObject);\nfunction isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter((k) => k !== \"message\" && k !== \"stack\");\n}\nclass FSharpException extends Exception {\n    toString() {\n        var _a;\n        // const fieldNames = getFSharpExceptionFieldNames(this);\n        const fields = Object.entries(this).filter(([k, _]) => k !== \"message\" && k !== \"stack\");\n        const len = fields.length;\n        if (len === 0) {\n            return (_a = this.message) !== null && _a !== void 0 ? _a : \"\";\n        }\n        else if (len === 1) {\n            return this.message + \" \" + String(fields[1]);\n        }\n        else {\n            return this.message + \" (\" + fields.map(([_, v]) => String(v)).join(\",\") + \")\";\n        }\n    }\n    toJSON() {\n        return recordToJson(this, getFSharpExceptionFieldNames);\n    }\n    GetHashCode() {\n        const fields = Object.entries(this).filter(([k, _]) => k !== \"message\" && k !== \"stack\");\n        const hashes = fields.map(([_, v]) => (0,_Util__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(v));\n        return (0,_Util__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)(hashes);\n    }\n    Equals(other) {\n        return recordEquals(this, other, getFSharpExceptionFieldNames);\n    }\n    CompareTo(other) {\n        return recordCompare(this, other, getFSharpExceptionFieldNames);\n    }\n}\nclass MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nconst Attribute = declare(function Attribute() { return; }, SystemObject);\n//# sourceMappingURL=Types.js.map\n\n//# sourceURL=webpack://Fable.Dragula/./.fable/fable-library.2.13.0/Types.js?");

/***/ }),

/***/ "./.fable/fable-library.2.13.0/Util.js":
/*!*********************************************!*\
  !*** ./.fable/fable-library.2.13.0/Util.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bindThis\": () => (/* binding */ bindThis),\n/* harmony export */   \"extend\": () => (/* binding */ extend),\n/* harmony export */   \"isIterable\": () => (/* binding */ isIterable),\n/* harmony export */   \"isArrayLike\": () => (/* binding */ isArrayLike),\n/* harmony export */   \"isComparer\": () => (/* binding */ isComparer),\n/* harmony export */   \"isComparable\": () => (/* binding */ isComparable),\n/* harmony export */   \"isEquatable\": () => (/* binding */ isEquatable),\n/* harmony export */   \"isHashable\": () => (/* binding */ isHashable),\n/* harmony export */   \"isDisposable\": () => (/* binding */ isDisposable),\n/* harmony export */   \"Comparer\": () => (/* binding */ Comparer),\n/* harmony export */   \"comparerFromEqualityComparer\": () => (/* binding */ comparerFromEqualityComparer),\n/* harmony export */   \"containsValue\": () => (/* binding */ containsValue),\n/* harmony export */   \"tryGetValue\": () => (/* binding */ tryGetValue),\n/* harmony export */   \"addToSet\": () => (/* binding */ addToSet),\n/* harmony export */   \"assertEqual\": () => (/* binding */ assertEqual),\n/* harmony export */   \"assertNotEqual\": () => (/* binding */ assertNotEqual),\n/* harmony export */   \"Lazy\": () => (/* binding */ Lazy),\n/* harmony export */   \"lazyFromValue\": () => (/* binding */ lazyFromValue),\n/* harmony export */   \"padWithZeros\": () => (/* binding */ padWithZeros),\n/* harmony export */   \"padLeftAndRightWithZeros\": () => (/* binding */ padLeftAndRightWithZeros),\n/* harmony export */   \"dateOffset\": () => (/* binding */ dateOffset),\n/* harmony export */   \"int16ToString\": () => (/* binding */ int16ToString),\n/* harmony export */   \"int32ToString\": () => (/* binding */ int32ToString),\n/* harmony export */   \"ObjectRef\": () => (/* binding */ ObjectRef),\n/* harmony export */   \"stringHash\": () => (/* binding */ stringHash),\n/* harmony export */   \"numberHash\": () => (/* binding */ numberHash),\n/* harmony export */   \"combineHashCodes\": () => (/* binding */ combineHashCodes),\n/* harmony export */   \"identityHash\": () => (/* binding */ identityHash),\n/* harmony export */   \"structuralHash\": () => (/* binding */ structuralHash),\n/* harmony export */   \"equalArraysWith\": () => (/* binding */ equalArraysWith),\n/* harmony export */   \"equalArrays\": () => (/* binding */ equalArrays),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"compareDates\": () => (/* binding */ compareDates),\n/* harmony export */   \"comparePrimitives\": () => (/* binding */ comparePrimitives),\n/* harmony export */   \"compareArraysWith\": () => (/* binding */ compareArraysWith),\n/* harmony export */   \"compareArrays\": () => (/* binding */ compareArrays),\n/* harmony export */   \"compareObjects\": () => (/* binding */ compareObjects),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"createAtom\": () => (/* binding */ createAtom),\n/* harmony export */   \"createObj\": () => (/* binding */ createObj),\n/* harmony export */   \"jsOptions\": () => (/* binding */ jsOptions),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"randomNext\": () => (/* binding */ randomNext),\n/* harmony export */   \"randomBytes\": () => (/* binding */ randomBytes),\n/* harmony export */   \"unescapeDataString\": () => (/* binding */ unescapeDataString),\n/* harmony export */   \"escapeDataString\": () => (/* binding */ escapeDataString),\n/* harmony export */   \"escapeUriString\": () => (/* binding */ escapeUriString),\n/* harmony export */   \"count\": () => (/* binding */ count),\n/* harmony export */   \"clear\": () => (/* binding */ clear),\n/* harmony export */   \"uncurry\": () => (/* binding */ uncurry),\n/* harmony export */   \"curry\": () => (/* binding */ curry),\n/* harmony export */   \"partialApply\": () => (/* binding */ partialApply),\n/* harmony export */   \"mapCurriedArgs\": () => (/* binding */ mapCurriedArgs),\n/* harmony export */   \"addToDict\": () => (/* binding */ addToDict),\n/* harmony export */   \"getItemFromDict\": () => (/* binding */ getItemFromDict)\n/* harmony export */ });\n// tslint:disable:ban-types\nfunction bindThis(this$, source) {\n    for (const key of Object.keys(source)) {\n        if (typeof source[key] === \"function\") {\n            source[key] = source[key].bind(this$);\n        }\n    }\n    return source;\n}\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nfunction extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            const descr = Object.getOwnPropertyDescriptor(source, key);\n            if (descr) {\n                Object.defineProperty(target, key, descr);\n            }\n        }\n    }\n    return target;\n}\nfunction isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nfunction isArrayLike(x) {\n    return x != null && (Array.isArray(x) || ArrayBuffer.isView(x));\n}\nfunction isComparer(x) {\n    return x != null && typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return x != null && typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return x != null && typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return x != null && typeof x.GetHashCode === \"function\";\n}\nfunction isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nclass Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nfunction comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nfunction containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nfunction addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nfunction assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nclass Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nfunction lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nfunction padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nfunction padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nfunction dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nfunction int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nfunction int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nlet ObjectRef = /** @class */ (() => {\n    class ObjectRef {\n        static id(o) {\n            if (!ObjectRef.idMap.has(o)) {\n                ObjectRef.idMap.set(o, ++ObjectRef.count);\n            }\n            return ObjectRef.idMap.get(o);\n        }\n    }\n    ObjectRef.idMap = new WeakMap();\n    ObjectRef.count = 0;\n    return ObjectRef;\n})();\n\nfunction stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nfunction numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nfunction combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nfunction identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nfunction structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                const len = x.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(x[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nfunction equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nfunction equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nfunction compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nfunction comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nfunction compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nfunction compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nfunction compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x) && isArrayLike(y)) {\n        return compareArrays(x, y);\n    }\n    else if (x instanceof Date && y instanceof Date) {\n        return compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nfunction min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nfunction max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nfunction createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nfunction createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nfunction jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nfunction round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nfunction sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nfunction randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nfunction randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nfunction unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nfunction escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nfunction escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nfunction count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nfunction clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nfunction uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nfunction curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nfunction partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nfunction mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\nfunction addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nfunction getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n//# sourceMappingURL=Util.js.map\n\n//# sourceURL=webpack://Fable.Dragula/./.fable/fable-library.2.13.0/Util.js?");

/***/ }),

/***/ "./node_modules/atoa/atoa.js":
/*!***********************************!*\
  !*** ./node_modules/atoa/atoa.js ***!
  \***********************************/
/***/ ((module) => {

eval("module.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/atoa/atoa.js?");

/***/ }),

/***/ "./node_modules/contra/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/contra/debounce.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar ticky = __webpack_require__(/*! ticky */ \"./node_modules/ticky/ticky-browser.js\");\n\nmodule.exports = function debounce (fn, args, ctx) {\n  if (!fn) { return; }\n  ticky(function run () {\n    fn.apply(ctx || null, args || []);\n  });\n};\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/contra/debounce.js?");

/***/ }),

/***/ "./node_modules/contra/emitter.js":
/*!****************************************!*\
  !*** ./node_modules/contra/emitter.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar atoa = __webpack_require__(/*! atoa */ \"./node_modules/atoa/atoa.js\");\nvar debounce = __webpack_require__(/*! ./debounce */ \"./node_modules/contra/debounce.js\");\n\nmodule.exports = function emitter (thing, options) {\n  var opts = options || {};\n  var evt = {};\n  if (thing === undefined) { thing = {}; }\n  thing.on = function (type, fn) {\n    if (!evt[type]) {\n      evt[type] = [fn];\n    } else {\n      evt[type].push(fn);\n    }\n    return thing;\n  };\n  thing.once = function (type, fn) {\n    fn._once = true; // thing.off(fn) still works!\n    thing.on(type, fn);\n    return thing;\n  };\n  thing.off = function (type, fn) {\n    var c = arguments.length;\n    if (c === 1) {\n      delete evt[type];\n    } else if (c === 0) {\n      evt = {};\n    } else {\n      var et = evt[type];\n      if (!et) { return thing; }\n      et.splice(et.indexOf(fn), 1);\n    }\n    return thing;\n  };\n  thing.emit = function () {\n    var args = atoa(arguments);\n    return thing.emitterSnapshot(args.shift()).apply(this, args);\n  };\n  thing.emitterSnapshot = function (type) {\n    var et = (evt[type] || []).slice(0);\n    return function () {\n      var args = atoa(arguments);\n      var ctx = this || thing;\n      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }\n      et.forEach(function emitter (listen) {\n        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }\n        if (listen._once) { thing.off(type, listen); }\n      });\n      return thing;\n    };\n  };\n  return thing;\n};\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/contra/emitter.js?");

/***/ }),

/***/ "./node_modules/crossvent/src/crossvent.js":
/*!*************************************************!*\
  !*** ./node_modules/crossvent/src/crossvent.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar customEvent = __webpack_require__(/*! custom-event */ \"./node_modules/custom-event/index.js\");\nvar eventmap = __webpack_require__(/*! ./eventmap */ \"./node_modules/crossvent/src/eventmap.js\");\nvar doc = __webpack_require__.g.document;\nvar addEvent = addEventEasy;\nvar removeEvent = removeEventEasy;\nvar hardCache = [];\n\nif (!__webpack_require__.g.addEventListener) {\n  addEvent = addEventHard;\n  removeEvent = removeEventHard;\n}\n\nmodule.exports = {\n  add: addEvent,\n  remove: removeEvent,\n  fabricate: fabricateEvent\n};\n\nfunction addEventEasy (el, type, fn, capturing) {\n  return el.addEventListener(type, fn, capturing);\n}\n\nfunction addEventHard (el, type, fn) {\n  return el.attachEvent('on' + type, wrap(el, type, fn));\n}\n\nfunction removeEventEasy (el, type, fn, capturing) {\n  return el.removeEventListener(type, fn, capturing);\n}\n\nfunction removeEventHard (el, type, fn) {\n  var listener = unwrap(el, type, fn);\n  if (listener) {\n    return el.detachEvent('on' + type, listener);\n  }\n}\n\nfunction fabricateEvent (el, type, model) {\n  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\n  if (el.dispatchEvent) {\n    el.dispatchEvent(e);\n  } else {\n    el.fireEvent('on' + type, e);\n  }\n  function makeClassicEvent () {\n    var e;\n    if (doc.createEvent) {\n      e = doc.createEvent('Event');\n      e.initEvent(type, true, true);\n    } else if (doc.createEventObject) {\n      e = doc.createEventObject();\n    }\n    return e;\n  }\n  function makeCustomEvent () {\n    return new customEvent(type, { detail: model });\n  }\n}\n\nfunction wrapperFactory (el, type, fn) {\n  return function wrapper (originalEvent) {\n    var e = originalEvent || __webpack_require__.g.event;\n    e.target = e.target || e.srcElement;\n    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };\n    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };\n    e.which = e.which || e.keyCode;\n    fn.call(el, e);\n  };\n}\n\nfunction wrap (el, type, fn) {\n  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\n  hardCache.push({\n    wrapper: wrapper,\n    element: el,\n    type: type,\n    fn: fn\n  });\n  return wrapper;\n}\n\nfunction unwrap (el, type, fn) {\n  var i = find(el, type, fn);\n  if (i) {\n    var wrapper = hardCache[i].wrapper;\n    hardCache.splice(i, 1); // free up a tad of memory\n    return wrapper;\n  }\n}\n\nfunction find (el, type, fn) {\n  var i, item;\n  for (i = 0; i < hardCache.length; i++) {\n    item = hardCache[i];\n    if (item.element === el && item.type === type && item.fn === fn) {\n      return i;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/crossvent/src/crossvent.js?");

/***/ }),

/***/ "./node_modules/crossvent/src/eventmap.js":
/*!************************************************!*\
  !*** ./node_modules/crossvent/src/eventmap.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar eventmap = [];\nvar eventname = '';\nvar ron = /^on/;\n\nfor (eventname in __webpack_require__.g) {\n  if (ron.test(eventname)) {\n    eventmap.push(eventname.slice(2));\n  }\n}\n\nmodule.exports = eventmap;\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/crossvent/src/eventmap.js?");

/***/ }),

/***/ "./node_modules/custom-event/index.js":
/*!********************************************!*\
  !*** ./node_modules/custom-event/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar NativeCustomEvent = __webpack_require__.g.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/custom-event/index.js?");

/***/ }),

/***/ "./node_modules/dragula/classes.js":
/*!*****************************************!*\
  !*** ./node_modules/dragula/classes.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar cache = {};\nvar start = '(?:^|\\\\s)';\nvar end = '(?:\\\\s|$)';\n\nfunction lookupClass (className) {\n  var cached = cache[className];\n  if (cached) {\n    cached.lastIndex = 0;\n  } else {\n    cache[className] = cached = new RegExp(start + className + end, 'g');\n  }\n  return cached;\n}\n\nfunction addClass (el, className) {\n  var current = el.className;\n  if (!current.length) {\n    el.className = className;\n  } else if (!lookupClass(className).test(current)) {\n    el.className += ' ' + className;\n  }\n}\n\nfunction rmClass (el, className) {\n  el.className = el.className.replace(lookupClass(className), ' ').trim();\n}\n\nmodule.exports = {\n  add: addClass,\n  rm: rmClass\n};\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/dragula/classes.js?");

/***/ }),

/***/ "./node_modules/dragula/dragula.js":
/*!*****************************************!*\
  !*** ./node_modules/dragula/dragula.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar emitter = __webpack_require__(/*! contra/emitter */ \"./node_modules/contra/emitter.js\");\nvar crossvent = __webpack_require__(/*! crossvent */ \"./node_modules/crossvent/src/crossvent.js\");\nvar classes = __webpack_require__(/*! ./classes */ \"./node_modules/dragula/classes.js\");\nvar doc = document;\nvar documentElement = doc.documentElement;\n\nfunction dragula (initialContainers, options) {\n  var len = arguments.length;\n  if (len === 1 && Array.isArray(initialContainers) === false) {\n    options = initialContainers;\n    initialContainers = [];\n  }\n  var _mirror; // mirror image\n  var _source; // source container\n  var _item; // item being dragged\n  var _offsetX; // reference x\n  var _offsetY; // reference y\n  var _moveX; // reference move x\n  var _moveY; // reference move y\n  var _initialSibling; // reference sibling when grabbed\n  var _currentSibling; // reference sibling now\n  var _copy; // item used for copying\n  var _renderTimer; // timer for setTimeout renderMirrorImage\n  var _lastDropTarget = null; // last container item was over\n  var _grabbed; // holds mousedown context until first mousemove\n\n  var o = options || {};\n  if (o.moves === void 0) { o.moves = always; }\n  if (o.accepts === void 0) { o.accepts = always; }\n  if (o.invalid === void 0) { o.invalid = invalidTarget; }\n  if (o.containers === void 0) { o.containers = initialContainers || []; }\n  if (o.isContainer === void 0) { o.isContainer = never; }\n  if (o.copy === void 0) { o.copy = false; }\n  if (o.copySortSource === void 0) { o.copySortSource = false; }\n  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\n  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\n  if (o.direction === void 0) { o.direction = 'vertical'; }\n  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\n  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\n\n  var drake = emitter({\n    containers: o.containers,\n    start: manualStart,\n    end: end,\n    cancel: cancel,\n    remove: remove,\n    destroy: destroy,\n    canMove: canMove,\n    dragging: false\n  });\n\n  if (o.removeOnSpill === true) {\n    drake.on('over', spillOver).on('out', spillOut);\n  }\n\n  events();\n\n  return drake;\n\n  function isContainer (el) {\n    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\n  }\n\n  function events (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousedown', grab);\n    touchy(documentElement, op, 'mouseup', release);\n  }\n\n  function eventualMovements (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\n  }\n\n  function movements (remove) {\n    var op = remove ? 'remove' : 'add';\n    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\n    crossvent[op](documentElement, 'click', preventGrabbed);\n  }\n\n  function destroy () {\n    events(true);\n    release({});\n  }\n\n  function preventGrabbed (e) {\n    if (_grabbed) {\n      e.preventDefault();\n    }\n  }\n\n  function grab (e) {\n    _moveX = e.clientX;\n    _moveY = e.clientY;\n\n    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\n    if (ignore) {\n      return; // we only care about honest-to-god left clicks and touch events\n    }\n    var item = e.target;\n    var context = canStart(item);\n    if (!context) {\n      return;\n    }\n    _grabbed = context;\n    eventualMovements();\n    if (e.type === 'mousedown') {\n      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\n        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n      } else {\n        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n      }\n    }\n  }\n\n  function startBecauseMouseMoved (e) {\n    if (!_grabbed) {\n      return;\n    }\n    if (whichMouseButton(e) === 0) {\n      release({});\n      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n    }\n\n    // truthy check fixes #239, equality fixes #207, fixes #501\n    if ((e.clientX !== void 0 && Math.abs(e.clientX - _moveX) <= (o.slideFactorX || 0)) &&\n      (e.clientY !== void 0 && Math.abs(e.clientY - _moveY) <= (o.slideFactorY || 0))) {\n      return;\n    }\n\n    if (o.ignoreInputTextSelection) {\n      var clientX = getCoord('clientX', e) || 0;\n      var clientY = getCoord('clientY', e) || 0;\n      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\n      if (isInput(elementBehindCursor)) {\n        return;\n      }\n    }\n\n    var grabbed = _grabbed; // call to end() unsets _grabbed\n    eventualMovements(true);\n    movements();\n    end();\n    start(grabbed);\n\n    var offset = getOffset(_item);\n    _offsetX = getCoord('pageX', e) - offset.left;\n    _offsetY = getCoord('pageY', e) - offset.top;\n\n    classes.add(_copy || _item, 'gu-transit');\n    renderMirrorImage();\n    drag(e);\n  }\n\n  function canStart (item) {\n    if (drake.dragging && _mirror) {\n      return;\n    }\n    if (isContainer(item)) {\n      return; // don't drag container itself\n    }\n    var handle = item;\n    while (getParent(item) && isContainer(getParent(item)) === false) {\n      if (o.invalid(item, handle)) {\n        return;\n      }\n      item = getParent(item); // drag target should be a top element\n      if (!item) {\n        return;\n      }\n    }\n    var source = getParent(item);\n    if (!source) {\n      return;\n    }\n    if (o.invalid(item, handle)) {\n      return;\n    }\n\n    var movable = o.moves(item, source, handle, nextEl(item));\n    if (!movable) {\n      return;\n    }\n\n    return {\n      item: item,\n      source: source\n    };\n  }\n\n  function canMove (item) {\n    return !!canStart(item);\n  }\n\n  function manualStart (item) {\n    var context = canStart(item);\n    if (context) {\n      start(context);\n    }\n  }\n\n  function start (context) {\n    if (isCopy(context.item, context.source)) {\n      _copy = context.item.cloneNode(true);\n      drake.emit('cloned', _copy, context.item, 'copy');\n    }\n\n    _source = context.source;\n    _item = context.item;\n    _initialSibling = _currentSibling = nextEl(context.item);\n\n    drake.dragging = true;\n    drake.emit('drag', _item, _source);\n  }\n\n  function invalidTarget () {\n    return false;\n  }\n\n  function end () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    drop(item, getParent(item));\n  }\n\n  function ungrab () {\n    _grabbed = false;\n    eventualMovements(true);\n    movements(true);\n  }\n\n  function release (e) {\n    ungrab();\n\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var clientX = getCoord('clientX', e) || 0;\n    var clientY = getCoord('clientY', e) || 0;\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\n      drop(item, dropTarget);\n    } else if (o.removeOnSpill) {\n      remove();\n    } else {\n      cancel();\n    }\n  }\n\n  function drop (item, target) {\n    var parent = getParent(item);\n    if (_copy && o.copySortSource && target === _source) {\n      parent.removeChild(_item);\n    }\n    if (isInitialPlacement(target)) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, target, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function remove () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var parent = getParent(item);\n    if (parent) {\n      parent.removeChild(item);\n    }\n    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\n    cleanup();\n  }\n\n  function cancel (revert) {\n    if (!drake.dragging) {\n      return;\n    }\n    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\n    var item = _copy || _item;\n    var parent = getParent(item);\n    var initial = isInitialPlacement(parent);\n    if (initial === false && reverts) {\n      if (_copy) {\n        if (parent) {\n          parent.removeChild(_copy);\n        }\n      } else {\n        _source.insertBefore(item, _initialSibling);\n      }\n    }\n    if (initial || reverts) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, parent, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function cleanup () {\n    var item = _copy || _item;\n    ungrab();\n    removeMirrorImage();\n    if (item) {\n      classes.rm(item, 'gu-transit');\n    }\n    if (_renderTimer) {\n      clearTimeout(_renderTimer);\n    }\n    drake.dragging = false;\n    if (_lastDropTarget) {\n      drake.emit('out', item, _lastDropTarget, _source);\n    }\n    drake.emit('dragend', item);\n    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\n  }\n\n  function isInitialPlacement (target, s) {\n    var sibling;\n    if (s !== void 0) {\n      sibling = s;\n    } else if (_mirror) {\n      sibling = _currentSibling;\n    } else {\n      sibling = nextEl(_copy || _item);\n    }\n    return target === _source && sibling === _initialSibling;\n  }\n\n  function findDropTarget (elementBehindCursor, clientX, clientY) {\n    var target = elementBehindCursor;\n    while (target && !accepted()) {\n      target = getParent(target);\n    }\n    return target;\n\n    function accepted () {\n      var droppable = isContainer(target);\n      if (droppable === false) {\n        return false;\n      }\n\n      var immediate = getImmediateChild(target, elementBehindCursor);\n      var reference = getReference(target, immediate, clientX, clientY);\n      var initial = isInitialPlacement(target, reference);\n      if (initial) {\n        return true; // should always be able to drop it right back where it was\n      }\n      return o.accepts(_item, target, _source, reference);\n    }\n  }\n\n  function drag (e) {\n    if (!_mirror) {\n      return;\n    }\n    e.preventDefault();\n\n    var clientX = getCoord('clientX', e) || 0;\n    var clientY = getCoord('clientY', e) || 0;\n    var x = clientX - _offsetX;\n    var y = clientY - _offsetY;\n\n    _mirror.style.left = x + 'px';\n    _mirror.style.top = y + 'px';\n\n    var item = _copy || _item;\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\n    if (changed || dropTarget === null) {\n      out();\n      _lastDropTarget = dropTarget;\n      over();\n    }\n    var parent = getParent(item);\n    if (dropTarget === _source && _copy && !o.copySortSource) {\n      if (parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    var reference;\n    var immediate = getImmediateChild(dropTarget, elementBehindCursor);\n    if (immediate !== null) {\n      reference = getReference(dropTarget, immediate, clientX, clientY);\n    } else if (o.revertOnSpill === true && !_copy) {\n      reference = _initialSibling;\n      dropTarget = _source;\n    } else {\n      if (_copy && parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    if (\n      (reference === null && changed) ||\n      reference !== item &&\n      reference !== nextEl(item)\n    ) {\n      _currentSibling = reference;\n      dropTarget.insertBefore(item, reference);\n      drake.emit('shadow', item, dropTarget, _source);\n    }\n    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\n    function over () { if (changed) { moved('over'); } }\n    function out () { if (_lastDropTarget) { moved('out'); } }\n  }\n\n  function spillOver (el) {\n    classes.rm(el, 'gu-hide');\n  }\n\n  function spillOut (el) {\n    if (drake.dragging) { classes.add(el, 'gu-hide'); }\n  }\n\n  function renderMirrorImage () {\n    if (_mirror) {\n      return;\n    }\n    var rect = _item.getBoundingClientRect();\n    _mirror = _item.cloneNode(true);\n    _mirror.style.width = getRectWidth(rect) + 'px';\n    _mirror.style.height = getRectHeight(rect) + 'px';\n    classes.rm(_mirror, 'gu-transit');\n    classes.add(_mirror, 'gu-mirror');\n    o.mirrorContainer.appendChild(_mirror);\n    touchy(documentElement, 'add', 'mousemove', drag);\n    classes.add(o.mirrorContainer, 'gu-unselectable');\n    drake.emit('cloned', _mirror, _item, 'mirror');\n  }\n\n  function removeMirrorImage () {\n    if (_mirror) {\n      classes.rm(o.mirrorContainer, 'gu-unselectable');\n      touchy(documentElement, 'remove', 'mousemove', drag);\n      getParent(_mirror).removeChild(_mirror);\n      _mirror = null;\n    }\n  }\n\n  function getImmediateChild (dropTarget, target) {\n    var immediate = target;\n    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n      immediate = getParent(immediate);\n    }\n    if (immediate === documentElement) {\n      return null;\n    }\n    return immediate;\n  }\n\n  function getReference (dropTarget, target, x, y) {\n    var horizontal = o.direction === 'horizontal';\n    var reference = target !== dropTarget ? inside() : outside();\n    return reference;\n\n    function outside () { // slower, but able to figure out any position\n      var len = dropTarget.children.length;\n      var i;\n      var el;\n      var rect;\n      for (i = 0; i < len; i++) {\n        el = dropTarget.children[i];\n        rect = el.getBoundingClientRect();\n        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\n        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\n      }\n      return null;\n    }\n\n    function inside () { // faster, but only available if dropped inside a child element\n      var rect = target.getBoundingClientRect();\n      if (horizontal) {\n        return resolve(x > rect.left + getRectWidth(rect) / 2);\n      }\n      return resolve(y > rect.top + getRectHeight(rect) / 2);\n    }\n\n    function resolve (after) {\n      return after ? nextEl(target) : target;\n    }\n  }\n\n  function isCopy (item, container) {\n    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n  }\n}\n\nfunction touchy (el, op, type, fn) {\n  var touch = {\n    mouseup: 'touchend',\n    mousedown: 'touchstart',\n    mousemove: 'touchmove'\n  };\n  var pointers = {\n    mouseup: 'pointerup',\n    mousedown: 'pointerdown',\n    mousemove: 'pointermove'\n  };\n  var microsoft = {\n    mouseup: 'MSPointerUp',\n    mousedown: 'MSPointerDown',\n    mousemove: 'MSPointerMove'\n  };\n  if (__webpack_require__.g.navigator.pointerEnabled) {\n    crossvent[op](el, pointers[type], fn);\n  } else if (__webpack_require__.g.navigator.msPointerEnabled) {\n    crossvent[op](el, microsoft[type], fn);\n  } else {\n    crossvent[op](el, touch[type], fn);\n    crossvent[op](el, type, fn);\n  }\n}\n\nfunction whichMouseButton (e) {\n  if (e.touches !== void 0) { return e.touches.length; }\n  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\n  if (e.buttons !== void 0) { return e.buttons; }\n  var button = e.button;\n  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\n  }\n}\n\nfunction getOffset (el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\n    top: rect.top + getScroll('scrollTop', 'pageYOffset')\n  };\n}\n\nfunction getScroll (scrollProp, offsetProp) {\n  if (typeof __webpack_require__.g[offsetProp] !== 'undefined') {\n    return __webpack_require__.g[offsetProp];\n  }\n  if (documentElement.clientHeight) {\n    return documentElement[scrollProp];\n  }\n  return doc.body[scrollProp];\n}\n\nfunction getElementBehindPoint (point, x, y) {\n  point = point || {};\n  var state = point.className || '';\n  var el;\n  point.className += ' gu-hide';\n  el = doc.elementFromPoint(x, y);\n  point.className = state;\n  return el;\n}\n\nfunction never () { return false; }\nfunction always () { return true; }\nfunction getRectWidth (rect) { return rect.width || (rect.right - rect.left); }\nfunction getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }\nfunction getParent (el) { return el.parentNode === doc ? null : el.parentNode; }\nfunction isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }\nfunction isEditable (el) {\n  if (!el) { return false; } // no parents were editable\n  if (el.contentEditable === 'false') { return false; } // stop the lookup\n  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\n  return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n}\n\nfunction nextEl (el) {\n  return el.nextElementSibling || manually();\n  function manually () {\n    var sibling = el;\n    do {\n      sibling = sibling.nextSibling;\n    } while (sibling && sibling.nodeType !== 1);\n    return sibling;\n  }\n}\n\nfunction getEventHost (e) {\n  // on touchend event, we have to use `e.changedTouches`\n  // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n  // see https://github.com/bevacqua/dragula/issues/34\n  if (e.targetTouches && e.targetTouches.length) {\n    return e.targetTouches[0];\n  }\n  if (e.changedTouches && e.changedTouches.length) {\n    return e.changedTouches[0];\n  }\n  return e;\n}\n\nfunction getCoord (coord, e) {\n  var host = getEventHost(e);\n  var missMap = {\n    pageX: 'clientX', // IE8\n    pageY: 'clientY' // IE8\n  };\n  if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n    coord = missMap[coord];\n  }\n  return host[coord];\n}\n\nmodule.exports = dragula;\n\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/dragula/dragula.js?");

/***/ }),

/***/ "./Fable.Dragula.fsproj":
/*!******************************!*\
  !*** ./Fable.Dragula.fsproj ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dragula$002EOptions\": () => (/* reexport safe */ _Library_fs__WEBPACK_IMPORTED_MODULE_0__.Dragula$002EOptions),\n/* harmony export */   \"Dragula$002EOptions$$$Default\": () => (/* reexport safe */ _Library_fs__WEBPACK_IMPORTED_MODULE_0__.Dragula$002EOptions$$$Default),\n/* harmony export */   \"Dragula$002EOptions$reflection\": () => (/* reexport safe */ _Library_fs__WEBPACK_IMPORTED_MODULE_0__.Dragula$002EOptions$reflection),\n/* harmony export */   \"TestUse$$$left\": () => (/* reexport safe */ _Library_fs__WEBPACK_IMPORTED_MODULE_0__.TestUse$$$left),\n/* harmony export */   \"TestUse$$$right\": () => (/* reexport safe */ _Library_fs__WEBPACK_IMPORTED_MODULE_0__.TestUse$$$right)\n/* harmony export */ });\n/* harmony import */ var _Library_fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Library.fs */ \"./Library.fs\");\n\n\n//# sourceURL=webpack://Fable.Dragula/./Fable.Dragula.fsproj?");

/***/ }),

/***/ "./Library.fs":
/*!********************!*\
  !*** ./Library.fs ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dragula$002EOptions\": () => (/* binding */ Dragula$002EOptions),\n/* harmony export */   \"Dragula$002EOptions$reflection\": () => (/* binding */ Dragula$002EOptions$reflection),\n/* harmony export */   \"Dragula$002EOptions$$$Default\": () => (/* binding */ Dragula$002EOptions$$$Default),\n/* harmony export */   \"TestUse$$$left\": () => (/* binding */ TestUse$$$left),\n/* harmony export */   \"TestUse$$$right\": () => (/* binding */ TestUse$$$right)\n/* harmony export */ });\n/* harmony import */ var _fable_fable_library_2_13_0_Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./.fable/fable-library.2.13.0/Types.js */ \"./.fable/fable-library.2.13.0/Types.js\");\n/* harmony import */ var _fable_fable_library_2_13_0_Reflection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./.fable/fable-library.2.13.0/Reflection.js */ \"./.fable/fable-library.2.13.0/Reflection.js\");\n/* harmony import */ var dragula__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dragula */ \"./node_modules/dragula/dragula.js\");\n/* harmony import */ var dragula__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dragula__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst Dragula$002EOptions = (0,_fable_fable_library_2_13_0_Types_js__WEBPACK_IMPORTED_MODULE_0__.declare)(function Fable_Dragula_Options(copy, copySortSource, revertOnSpill, removeOnSpill) {\n  this.copy = copy;\n  this.copySortSource = copySortSource;\n  this.revertOnSpill = revertOnSpill;\n  this.removeOnSpill = removeOnSpill;\n}, _fable_fable_library_2_13_0_Types_js__WEBPACK_IMPORTED_MODULE_0__.Record);\nfunction Dragula$002EOptions$reflection() {\n  return (0,_fable_fable_library_2_13_0_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.record_type)(\"Fable.Dragula.Options\", [], Dragula$002EOptions, () => [[\"copy\", _fable_fable_library_2_13_0_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.bool_type], [\"copySortSource\", _fable_fable_library_2_13_0_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.bool_type], [\"revertOnSpill\", _fable_fable_library_2_13_0_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.bool_type], [\"removeOnSpill\", _fable_fable_library_2_13_0_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.bool_type]]);\n}\nfunction Dragula$002EOptions$$$Default() {\n  return new Dragula$002EOptions(false, false, false, false);\n}\nconst TestUse$$$left = document.getElementById(\"left-events\");\nconst TestUse$$$right = document.getElementById(\"right-events\");\ndragula__WEBPACK_IMPORTED_MODULE_2___default()([TestUse$$$left, TestUse$$$right], (() => {\n  const inputRecord = Dragula$002EOptions$$$Default();\n  return new Dragula$002EOptions(true, false, inputRecord.revertOnSpill, inputRecord.removeOnSpill);\n})());\n\n//# sourceURL=webpack://Fable.Dragula/./Library.fs?");

/***/ }),

/***/ "./node_modules/ticky/ticky-browser.js":
/*!*********************************************!*\
  !*** ./node_modules/ticky/ticky-browser.js ***!
  \*********************************************/
/***/ ((module) => {

eval("var si = typeof setImmediate === 'function', tick;\nif (si) {\n  tick = function (fn) { setImmediate(fn); };\n} else {\n  tick = function (fn) { setTimeout(fn, 0); };\n}\n\nmodule.exports = tick;\n\n//# sourceURL=webpack://Fable.Dragula/./node_modules/ticky/ticky-browser.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./Fable.Dragula.fsproj");
/******/ 	
/******/ })()
;